#!/bin/sh

ccl_name () {
  if [ "Linux" = $(uname) ];
  then
    if [ "x86_64" = $(uname -m) ];
    then
      echo "lx86cl64";
    else
      echo "lx86cl";
    fi
  elif [ "Darwin" = $(uname) ];
  then
    if [ "x86_64" = $(uname -m) ];
    then
      echo "dx86cl64";
    else
      echo "dx86cl";
    fi
  elif [ "FreeBSD" = $(uname) ];  # Untested
  then
    if [ "x86_64" = $(uname -m) ];
    then
      echo "fx86cl64";
    else
      echo "fx86cl";
    fi
  elif [ "SunOS" = $(uname) ];  # Untested
  then
    if [ "x86_64" = $(uname -m) ];
    then
      echo "sx86cl64";
    else
      echo "sx86cl";
    fi
  else
    echo "Unsupported platform" >&2;
    exit 1;
  fi
}

SBCL="sbcl"
CCL="ccl"

lisp=$1

if [ "$SBCL" = "$lisp" ] || [ "$CCL" = "$lisp" ];
then
  shift;
else
  lisp="$SBCL"
fi

# Check whether SBCL is available.
if [ "$SBCL" = "$lisp" ];
then
  if ! command -v sbcl --version 2>/dev/null 1>&2;
  then
    echo "No SBCL on the system" >&2;
    exit 1;
  fi
fi

# Check whether Clozure CL is available.
if [ "$CCL" = "$lisp" ];
then
  compiler=$(ccl_name);

  if ! command -v "$compiler" --version 2>/dev/null 1>&2;
  then
    echo "No Clozure CL on the system" >&2;
    exit 1;
  fi
fi

script_path="$(dirname $0)";
root="$script_path/..";

cd "$root";

# Download quicklisp.lisp if it is not available.
if ! [ -f quicklisp.lisp ];
then
  if command -v wget --version 2>/dev/null 1>&2;
  then
    wget -c https://beta.quicklisp.org/quicklisp.lisp
  elif command -v curl --version 2>/dev.null 1&2;
  then
    curl https://beta.quicklisp.org/quicklisp.lisp --output quicklisp.lisp
  fi
fi

# Check whether quicklisp.lisp is available.
if ! [ -f quicklisp.lisp ];
then
  echo "Failed to download quicklisp.lisp" >&2;
  exit 1;
fi

# Download cl-portable.lisp if it is not available.
if ! [ -f cl-portable.lisp ];
then
  if command -v wget --version 2>/dev/null 1>&2;
  then
    wget -c https://raw.githubusercontent.com/cwchentw/cl-portable/master/cl-portable.lisp
  elif command -v curl --version 2>/dev.null 1&2;
  then
    curl https://raw.githubusercontent.com/cwchentw/cl-portable/master/cl-portable.lisp --output cl-yautils.lisp
  fi
fi

# Check whether cl-portable.lisp is available.
if ! [ -f cl-portable.lisp ];
then
  echo "Failed to download cl-portable.lisp" >&2;
  exit 1;
fi

# Download cl-yautils.lisp if it is not available.
if ! [ -f cl-yautils.lisp ];
then
  if command -v wget --version 2>/dev/null 1>&2;
  then
    wget -c https://raw.githubusercontent.com/cwchentw/cl-yautils/master/cl-yautils.lisp
  elif command -v curl --version 2>/dev.null 1&2;
  then
    curl https://raw.githubusercontent.com/cwchentw/cl-yautils/master/cl-yautils.lisp --output cl-yautils.lisp
  fi
fi

# Check whether cl-yautils.lisp is available.
if ! [ -f cl-yautils.lisp ];
then
  echo "Failed to download cl-yautils.lisp" >&2;
  exit 1;
fi

if [ "$SBCL" = "$lisp" ];
then
  sbcl --load quicklisp.lisp \
       --eval "(quicklisp-quickstart:install :path \"./quicklisp\")" \
       --eval "(ql:quickload \"parenscript\")" \
       --load cl2js.lisp \
       --eval "(compile-program \"cl2js\" #'main)"
  exit 0;
fi

if [ "$CCL" = "$lisp" ];
then
  compiler=$(ccl_name);

  "$compiler" --load quicklisp.lisp \
              --eval "(quicklisp-quickstart:install :path \"./quicklisp\")" \
              --eval "(ql:quickload \"parenscript\")" \
              --load cl2js.lisp \
              --eval "(compile-program \"cl2js\" #'main)"
  exit 0;
fi
